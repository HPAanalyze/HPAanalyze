} else if(download_list == 'rna') {
download_list <- c('RNA tissue',
'RNA cell line')
} else if(download_list == 'isoform') {
download_list <- c('RNA transcript tissue',
'RNA transcript cell line')
}
hpa_downloaded_data <- list() #initiate the list to be returned
# Check if the term is requested or not (all by default)
# then download the file
# then unzip and make a tibble out of data
# then add the tibble to the list
if('Normal tissue' %in% download_list) {
temp <- tempfile()
download.file(url = 'https://www.proteinatlas.org/download/normal_tissue.tsv.zip',
destfile = temp)
normal_tissue <- read_tsv(unz(temp, 'normal_tissue.tsv'))
unlink(temp)
colnames(normal_tissue) <- c('ensembl', 'gene', 'tissue',
'cell_type', 'level', 'reliability')
hpa_downloaded_data$normal_tissue <- normal_tissue
}
if('Pathology' %in% download_list) {
temp <- tempfile()
download.file(url = 'https://www.proteinatlas.org/download/pathology.tsv.zip',
destfile = temp)
pathology <- read_tsv(unz(temp, 'pathology.tsv'))
unlink(temp)
colnames(pathology) <- c('ensembl', 'gene', 'cancer', 'high', 'medium',
'low', 'not_detected', 'prognostic_favorable',
'unprognostic_favorable', 'prognostic_unfavorable',
'unprognostic_unfavorable')
hpa_downloaded_data$pathology <- pathology
}
if('Subcellular location' %in% download_list) {
temp <- tempfile()
download.file(url = 'https://www.proteinatlas.org/download/subcellular_location.tsv.zip',
destfile = temp)
subcellular_location <- read_tsv(unz(temp, 'subcellular_location.tsv'))
unlink(temp)
colnames(subcellular_location) <- c('ensembl', 'gene', 'reliability', 'enhanced',
'supported', 'approved', 'uncertain',
'single_cell_var_intensity',
'single_cell_var_spatial',
'cell_cycle_dependency', 'go_id')
hpa_downloaded_data$subcellular_location <- subcellular_location
}
if('Subcellular location' %in% download_list) {
temp <- tempfile()
download.file(url = 'https://www.proteinatlas.org/download/subcellular_location.tsv.zip',
destfile = temp)
subcellular_location <- read_tsv(unz(temp, 'subcellular_location.tsv'))
unlink(temp)
colnames(subcellular_location) <- c('ensembl', 'gene', 'reliability', 'enhanced',
'supported', 'approved', 'uncertain',
'single_cell_var_intensity',
'single_cell_var_spatial',
'cell_cycle_dependency', 'go_id')
hpa_downloaded_data$subcellular_location <- subcellular_location
}
if('RNA tissue' %in% download_list) {
temp <- tempfile()
download.file(url = 'https://www.proteinatlas.org/download/rna_tissue.tsv.zip',
destfile = temp)
rna_tissue <- read_tsv(unz(temp, 'rna_tissue.tsv'))
unlink(temp)
colnames(rna_tissue) <- c('ensembl', 'gene', 'tissue',
'value', 'unit')
hpa_downloaded_data$rna_tissue <- rna_tissue
}
if('RNA cell line' %in% download_list) {
temp <- tempfile()
download.file(url = 'https://www.proteinatlas.org/download/rna_celline.tsv.zip',
destfile = temp)
rna_celline <- read_tsv(unz(temp, 'rna_celline.tsv'))
unlink(temp)
colnames(rna_celline) <- c('ensembl', 'gene', 'cell_line',
'value', 'unit')
hpa_downloaded_data$rna_celline <- rna_celline
}
if('RNA transcript tissue' %in% download_list) {
temp <- tempfile()
download.file(url = 'https://www.proteinatlas.org/download/transcript_rna_tissue.tsv.zip',
destfile = temp)
transcript_rna_tissue <- read_tsv(unz(temp, 'transcript_rna_tissue.tsv'))
unlink(temp)
transcript_rna_tissue <- gather(data = transcript_rna_tissue,
key = 'tissue',
value = 'value',
-ensgid, -enstid)
colnames(transcript_rna_tissue) <- c('ensembl', 'transcript',
'tissue', 'value')
hpa_downloaded_data$transcript_rna_tissue <- transcript_rna_tissue
}
if('RNA transcript cell line' %in% download_list) {
temp <- tempfile()
download.file(url = 'https://www.proteinatlas.org/download/transcript_rna_celline.tsv.zip',
destfile = temp)
transcript_rna_celline <- read_tsv(unz(temp, 'transcript_rna_celline.tsv'))
unlink(temp)
transcript_rna_celline <- gather(data = transcript_rna_celline,
key = 'cell_line',
value = 'value',
-ensgid, -enstid)
colnames(transcript_rna_celline) <- c('ensembl', 'transcript',
'cell_line', 'value')
hpa_downloaded_data$transcript_rna_celline <- transcript_rna_celline
}
rm(temp)
return(hpa_downloaded_data)
}
hpa_downloaded_data <- hpa_download()
hpa_downloaded_data <- hpa_download('all')
#generate a list of item to download
if(download_list == 'all') {
download_list <- c('Normal tissue',
'Pathology',
'Subcellular location',
'RNA tissue',
'RNA cell line',
'RNA transcript tissue',
'RNA transcript cell line')
} else if(download_list == 'histology') {
download_list <- c('Normal tissue',
'Pathology',
'Subcellular location')
} else if(download_list == 'rna') {
download_list <- c('RNA tissue',
'RNA cell line')
} else if(download_list == 'isoform') {
download_list <- c('RNA transcript tissue',
'RNA transcript cell line')
}
hpa_download <- function(download_list = 'histology') {
#generate a list of item to download
if(download_list == 'all') {
download_list <- c('Normal tissue',
'Pathology',
'Subcellular location',
'RNA tissue',
'RNA cell line',
'RNA transcript tissue',
'RNA transcript cell line')
} else if(download_list == 'histology') {
download_list <- c('Normal tissue',
'Pathology',
'Subcellular location')
} else if(download_list == 'rna') {
download_list <- c('RNA tissue',
'RNA cell line')
} else if(download_list == 'isoform') {
download_list <- c('RNA transcript tissue',
'RNA transcript cell line')
}
hpa_downloaded_data <- list() #initiate the list to be returned
# Check if the term is requested or not (all by default)
# then download the file
# then unzip and make a tibble out of data
# then add the tibble to the list
if('Normal tissue' %in% download_list) {
temp <- tempfile()
download.file(url = 'https://www.proteinatlas.org/download/normal_tissue.tsv.zip',
destfile = temp)
normal_tissue <- read_tsv(unz(temp, 'normal_tissue.tsv'))
unlink(temp)
colnames(normal_tissue) <- c('ensembl', 'gene', 'tissue',
'cell_type', 'level', 'reliability')
hpa_downloaded_data$normal_tissue <- normal_tissue
}
if('Pathology' %in% download_list) {
temp <- tempfile()
download.file(url = 'https://www.proteinatlas.org/download/pathology.tsv.zip',
destfile = temp)
pathology <- read_tsv(unz(temp, 'pathology.tsv'))
unlink(temp)
colnames(pathology) <- c('ensembl', 'gene', 'cancer', 'high', 'medium',
'low', 'not_detected', 'prognostic_favorable',
'unprognostic_favorable', 'prognostic_unfavorable',
'unprognostic_unfavorable')
hpa_downloaded_data$pathology <- pathology
}
if('Subcellular location' %in% download_list) {
temp <- tempfile()
download.file(url = 'https://www.proteinatlas.org/download/subcellular_location.tsv.zip',
destfile = temp)
subcellular_location <- read_tsv(unz(temp, 'subcellular_location.tsv'))
unlink(temp)
colnames(subcellular_location) <- c('ensembl', 'gene', 'reliability', 'enhanced',
'supported', 'approved', 'uncertain',
'single_cell_var_intensity',
'single_cell_var_spatial',
'cell_cycle_dependency', 'go_id')
hpa_downloaded_data$subcellular_location <- subcellular_location
}
if('Subcellular location' %in% download_list) {
temp <- tempfile()
download.file(url = 'https://www.proteinatlas.org/download/subcellular_location.tsv.zip',
destfile = temp)
subcellular_location <- read_tsv(unz(temp, 'subcellular_location.tsv'))
unlink(temp)
colnames(subcellular_location) <- c('ensembl', 'gene', 'reliability', 'enhanced',
'supported', 'approved', 'uncertain',
'single_cell_var_intensity',
'single_cell_var_spatial',
'cell_cycle_dependency', 'go_id')
hpa_downloaded_data$subcellular_location <- subcellular_location
}
if('RNA tissue' %in% download_list) {
temp <- tempfile()
download.file(url = 'https://www.proteinatlas.org/download/rna_tissue.tsv.zip',
destfile = temp)
rna_tissue <- read_tsv(unz(temp, 'rna_tissue.tsv'))
unlink(temp)
colnames(rna_tissue) <- c('ensembl', 'gene', 'tissue',
'value', 'unit')
hpa_downloaded_data$rna_tissue <- rna_tissue
}
if('RNA cell line' %in% download_list) {
temp <- tempfile()
download.file(url = 'https://www.proteinatlas.org/download/rna_celline.tsv.zip',
destfile = temp)
rna_celline <- read_tsv(unz(temp, 'rna_celline.tsv'))
unlink(temp)
colnames(rna_celline) <- c('ensembl', 'gene', 'cell_line',
'value', 'unit')
hpa_downloaded_data$rna_celline <- rna_celline
}
if('RNA transcript tissue' %in% download_list) {
temp <- tempfile()
download.file(url = 'https://www.proteinatlas.org/download/transcript_rna_tissue.tsv.zip',
destfile = temp)
transcript_rna_tissue <- read_tsv(unz(temp, 'transcript_rna_tissue.tsv'))
unlink(temp)
transcript_rna_tissue <- gather(data = transcript_rna_tissue,
key = 'tissue',
value = 'value',
-ensgid, -enstid)
colnames(transcript_rna_tissue) <- c('ensembl', 'transcript',
'tissue', 'value')
hpa_downloaded_data$transcript_rna_tissue <- transcript_rna_tissue
}
if('RNA transcript cell line' %in% download_list) {
temp <- tempfile()
download.file(url = 'https://www.proteinatlas.org/download/transcript_rna_celline.tsv.zip',
destfile = temp)
transcript_rna_celline <- read_tsv(unz(temp, 'transcript_rna_celline.tsv'))
unlink(temp)
transcript_rna_celline <- gather(data = transcript_rna_celline,
key = 'cell_line',
value = 'value',
-ensgid, -enstid)
colnames(transcript_rna_celline) <- c('ensembl', 'transcript',
'cell_line', 'value')
hpa_downloaded_data$transcript_rna_celline <- transcript_rna_celline
}
rm(temp)
return(hpa_downloaded_data)
}
hpa_download <- function(download_list = 'histology') {
#generate a list of item to download
if(download_list == 'all') {
download_list <- c('Normal tissue',
'Pathology',
'Subcellular location',
'RNA tissue',
'RNA cell line',
'RNA transcript tissue',
'RNA transcript cell line')
} else if(download_list == 'histology') {
download_list <- c('Normal tissue',
'Pathology',
'Subcellular location')
} else if(download_list == 'rna') {
download_list <- c('RNA tissue',
'RNA cell line')
} else if(download_list == 'isoform') {
download_list <- c('RNA transcript tissue',
'RNA transcript cell line')
}
hpa_downloaded_data <- list() #initiate the list to be returned
# Check if the term is requested or not (all by default)
# then download the file
# then unzip and make a tibble out of data
# then add the tibble to the list
if('Normal tissue' %in% download_list) {
temp <- tempfile()
download.file(url = 'https://www.proteinatlas.org/download/normal_tissue.tsv.zip',
destfile = temp)
normal_tissue <- read_tsv(unz(temp, 'normal_tissue.tsv'))
unlink(temp)
colnames(normal_tissue) <- c('ensembl', 'gene', 'tissue',
'cell_type', 'level', 'reliability')
hpa_downloaded_data$normal_tissue <- normal_tissue
}
if('Pathology' %in% download_list) {
temp <- tempfile()
download.file(url = 'https://www.proteinatlas.org/download/pathology.tsv.zip',
destfile = temp)
pathology <- read_tsv(unz(temp, 'pathology.tsv'))
unlink(temp)
colnames(pathology) <- c('ensembl', 'gene', 'cancer', 'high', 'medium',
'low', 'not_detected', 'prognostic_favorable',
'unprognostic_favorable', 'prognostic_unfavorable',
'unprognostic_unfavorable')
hpa_downloaded_data$pathology <- pathology
}
if('Subcellular location' %in% download_list) {
temp <- tempfile()
download.file(url = 'https://www.proteinatlas.org/download/subcellular_location.tsv.zip',
destfile = temp)
subcellular_location <- read_tsv(unz(temp, 'subcellular_location.tsv'))
unlink(temp)
colnames(subcellular_location) <- c('ensembl', 'gene', 'reliability', 'enhanced',
'supported', 'approved', 'uncertain',
'single_cell_var_intensity',
'single_cell_var_spatial',
'cell_cycle_dependency', 'go_id')
hpa_downloaded_data$subcellular_location <- subcellular_location
}
if('Subcellular location' %in% download_list) {
temp <- tempfile()
download.file(url = 'https://www.proteinatlas.org/download/subcellular_location.tsv.zip',
destfile = temp)
subcellular_location <- read_tsv(unz(temp, 'subcellular_location.tsv'))
unlink(temp)
colnames(subcellular_location) <- c('ensembl', 'gene', 'reliability', 'enhanced',
'supported', 'approved', 'uncertain',
'single_cell_var_intensity',
'single_cell_var_spatial',
'cell_cycle_dependency', 'go_id')
hpa_downloaded_data$subcellular_location <- subcellular_location
}
if('RNA tissue' %in% download_list) {
temp <- tempfile()
download.file(url = 'https://www.proteinatlas.org/download/rna_tissue.tsv.zip',
destfile = temp)
rna_tissue <- read_tsv(unz(temp, 'rna_tissue.tsv'))
unlink(temp)
colnames(rna_tissue) <- c('ensembl', 'gene', 'tissue',
'value', 'unit')
hpa_downloaded_data$rna_tissue <- rna_tissue
}
if('RNA cell line' %in% download_list) {
temp <- tempfile()
download.file(url = 'https://www.proteinatlas.org/download/rna_celline.tsv.zip',
destfile = temp)
rna_celline <- read_tsv(unz(temp, 'rna_celline.tsv'))
unlink(temp)
colnames(rna_celline) <- c('ensembl', 'gene', 'cell_line',
'value', 'unit')
hpa_downloaded_data$rna_celline <- rna_celline
}
if('RNA transcript tissue' %in% download_list) {
temp <- tempfile()
download.file(url = 'https://www.proteinatlas.org/download/transcript_rna_tissue.tsv.zip',
destfile = temp)
transcript_rna_tissue <- read_tsv(unz(temp, 'transcript_rna_tissue.tsv'))
unlink(temp)
transcript_rna_tissue <- gather(data = transcript_rna_tissue,
key = 'tissue',
value = 'value',
-ensgid, -enstid)
colnames(transcript_rna_tissue) <- c('ensembl', 'transcript',
'tissue', 'value')
hpa_downloaded_data$transcript_rna_tissue <- transcript_rna_tissue
}
if('RNA transcript cell line' %in% download_list) {
temp <- tempfile()
download.file(url = 'https://www.proteinatlas.org/download/transcript_rna_celline.tsv.zip',
destfile = temp)
transcript_rna_celline <- read_tsv(unz(temp, 'transcript_rna_celline.tsv'))
unlink(temp)
transcript_rna_celline <- gather(data = transcript_rna_celline,
key = 'cell_line',
value = 'value',
-ensgid, -enstid)
colnames(transcript_rna_celline) <- c('ensembl', 'transcript',
'cell_line', 'value')
hpa_downloaded_data$transcript_rna_celline <- transcript_rna_celline
}
rm(temp)
return(hpa_downloaded_data)
}
hpa_download <- function(download_list = 'histology') {
#generate a list of item to download
if(download_list == 'all') {
download_list <- c('Normal tissue',
'Pathology',
'Subcellular location',
'RNA tissue',
'RNA cell line',
'RNA transcript tissue',
'RNA transcript cell line')
} else if(download_list == 'histology') {
download_list <- c('Normal tissue',
'Pathology',
'Subcellular location')
} else if(download_list == 'rna') {
download_list <- c('RNA tissue',
'RNA cell line')
} else if(download_list == 'isoform') {
download_list <- c('RNA transcript tissue',
'RNA transcript cell line')
}
hpa_downloaded_data <- list() #initiate the list to be returned
# Check if the term is requested or not (all by default)
# then download the file
# then unzip and make a tibble out of data
# then add the tibble to the list
if('Normal tissue' %in% download_list) {
temp <- tempfile()
download.file(url = 'https://www.proteinatlas.org/download/normal_tissue.tsv.zip',
destfile = temp)
normal_tissue <- read_tsv(unz(temp, 'normal_tissue.tsv'))
unlink(temp)
colnames(normal_tissue) <- c('ensembl', 'gene', 'tissue',
'cell_type', 'level', 'reliability')
hpa_downloaded_data$normal_tissue <- normal_tissue
}
if('Pathology' %in% download_list) {
temp <- tempfile()
download.file(url = 'https://www.proteinatlas.org/download/pathology.tsv.zip',
destfile = temp)
pathology <- read_tsv(unz(temp, 'pathology.tsv'))
unlink(temp)
colnames(pathology) <- c('ensembl', 'gene', 'cancer', 'high', 'medium',
'low', 'not_detected', 'prognostic_favorable',
'unprognostic_favorable', 'prognostic_unfavorable',
'unprognostic_unfavorable')
hpa_downloaded_data$pathology <- pathology
}
if('Subcellular location' %in% download_list) {
temp <- tempfile()
download.file(url = 'https://www.proteinatlas.org/download/subcellular_location.tsv.zip',
destfile = temp)
subcellular_location <- read_tsv(unz(temp, 'subcellular_location.tsv'))
unlink(temp)
colnames(subcellular_location) <- c('ensembl', 'gene', 'reliability', 'enhanced',
'supported', 'approved', 'uncertain',
'single_cell_var_intensity',
'single_cell_var_spatial',
'cell_cycle_dependency', 'go_id')
hpa_downloaded_data$subcellular_location <- subcellular_location
}
if('Subcellular location' %in% download_list) {
temp <- tempfile()
download.file(url = 'https://www.proteinatlas.org/download/subcellular_location.tsv.zip',
destfile = temp)
subcellular_location <- read_tsv(unz(temp, 'subcellular_location.tsv'))
unlink(temp)
colnames(subcellular_location) <- c('ensembl', 'gene', 'reliability', 'enhanced',
'supported', 'approved', 'uncertain',
'single_cell_var_intensity',
'single_cell_var_spatial',
'cell_cycle_dependency', 'go_id')
hpa_downloaded_data$subcellular_location <- subcellular_location
}
if('RNA tissue' %in% download_list) {
temp <- tempfile()
download.file(url = 'https://www.proteinatlas.org/download/rna_tissue.tsv.zip',
destfile = temp)
rna_tissue <- read_tsv(unz(temp, 'rna_tissue.tsv'))
unlink(temp)
colnames(rna_tissue) <- c('ensembl', 'gene', 'tissue',
'value', 'unit')
hpa_downloaded_data$rna_tissue <- rna_tissue
}
if('RNA cell line' %in% download_list) {
temp <- tempfile()
download.file(url = 'https://www.proteinatlas.org/download/rna_celline.tsv.zip',
destfile = temp)
rna_celline <- read_tsv(unz(temp, 'rna_celline.tsv'))
unlink(temp)
colnames(rna_celline) <- c('ensembl', 'gene', 'cell_line',
'value', 'unit')
hpa_downloaded_data$rna_celline <- rna_celline
}
if('RNA transcript tissue' %in% download_list) {
temp <- tempfile()
download.file(url = 'https://www.proteinatlas.org/download/transcript_rna_tissue.tsv.zip',
destfile = temp)
transcript_rna_tissue <- read_tsv(unz(temp, 'transcript_rna_tissue.tsv'))
unlink(temp)
transcript_rna_tissue <- gather(data = transcript_rna_tissue,
key = 'tissue',
value = 'value',
-ensgid, -enstid)
colnames(transcript_rna_tissue) <- c('ensembl', 'transcript',
'tissue', 'value')
hpa_downloaded_data$transcript_rna_tissue <- transcript_rna_tissue
}
if('RNA transcript cell line' %in% download_list) {
temp <- tempfile()
download.file(url = 'https://www.proteinatlas.org/download/transcript_rna_celline.tsv.zip',
destfile = temp)
transcript_rna_celline <- read_tsv(unz(temp, 'transcript_rna_celline.tsv'))
unlink(temp)
transcript_rna_celline <- gather(data = transcript_rna_celline,
key = 'cell_line',
value = 'value',
-ensgid, -enstid)
colnames(transcript_rna_celline) <- c('ensembl', 'transcript',
'cell_line', 'value')
hpa_downloaded_data$transcript_rna_celline <- transcript_rna_celline
}
rm(temp)
return(hpa_downloaded_data)
}
library('tidyverse')
library('reshape2')
library('RColorBrewer')
hpa_downloaded_data <- hpa_download('histology')
