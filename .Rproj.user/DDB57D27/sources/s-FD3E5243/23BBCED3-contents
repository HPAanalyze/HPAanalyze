---
title: "Working with HPAanalyze package"
author: "Anh N. Tran"
date: "`r Sys.Date()`"
output: rmarkdown::html_vignette
vignette: >
  %\VignetteIndexEntry{Vignette Title}
  %\VignetteEngine{knitr::rmarkdown}
  %\VignetteEncoding{UTF-8}
---

```{r setup, include = FALSE}
knitr::opts_chunk$set(
  collapse = TRUE,
  comment = "#>"
)

devtools::load_all()
library(tibble)
library(dplyr)
```

## Introduction
Motivation:

HPAanalyze consists of

## Working with HPA Downloadable Data

HPA provides downloadable data...

Previously, another R package `hpar` was developed to...

HPA analyze provide tools to retrive and analyze these data via a set of functions including...

### Download and import data with `hpa_download`

```{r downloaded_data, warning=FALSE, message=FALSE}
downloaded_data <- hpa_download(download_list = 'all')
summary(downloaded_data)
```

The `normal_tissue` dataset contains information about protein expression profiles in human tissues based on IHC staining. The datasets contain six columns: `ensembl` (Ensembl gene identifier); `gene` (HGNC symbol), `tissue` (tissue name); `cell_type` (annotated cell type); `level` (expression value); `reliability` (the gene reliability of the expression value).

```{r normal_tissue}
glimpse(downloaded_data$normal_tissue, give.attr = F)
```

The `pathology` dataset contains information about protein expression profiles in human tumor tissue based on IHC staining. The datasets contain eleven columns: `ensembl` (Ensembl gene identifier); `gene` (HGNC symbol); `cancer` (cancer type); `high`, `medium`, `low`, `not_detected` (number of patients annotated for different staining levels); `prognostic_favorable`, `unprognostic_favorable`, `prognostic_unfavorable`, `unprognostic_unfavorable` (log-rank p values for patient survival and mRNA correlation).

```{r pathology}
glimpse(downloaded_data$pathology, give.attr = F)
```

The `subcellular_location` dataset contains information about subcellular localization of proteins based on IF stanings of normal cells. The datasets contain eleven columns: `ensembl` (Ensembl gene identifier); `gene` (HGNC symbol); `reliability` (gene reliability score); `enhanced` (enhanced locations); `supported` (supported locations); `approved` (approved locations); `uncertain` (uncertain locations); `single_cell_var_intensity` (locations with single-cell variation in intensity); `single_cell_var_spatial` (locations with spatial single-cell variation); `cell_cycle_dependency` (locations with observed cell cycle dependency); `go_id` (Gene Ontology Cellular Component term identifier).

```{r subcellular_location}
glimpse(downloaded_data$subcellular_location, give.attr = F)
```

The `rna_tissue` and `rna_cell_line` datasets contain RNA expression levels of 37 tissues and 64 cell lines based on RNA-seq. These datasets contain four columns each: `ensembl` (Ensembl gene identifier); `gene` (HGNC symbol); `tissue`/`cell_line` (type of sample); `value` + `unit` (expression level measured by transcripts per million).

```{r rna}
glimpse(downloaded_data$rna_tissue, give.attr = F)
glimpse(downloaded_data$rna_cell_line, give.attr = F)
```

Similarly, the `transcript_rna_tissue` and `transcript_rna_cell_line` datasets contain RNA isoform levels. These datasets contain four columns each: `ensembl` (Ensembl gene identifier); `transcript` (Ensembl transcript identifier); `tissue`/`cell_line` (type of sample); `value` (expression level measured by transcripts per million). Note that these datasets are significantly larger than others and should only be downloaded when necessary.

```{r}
glimpse(downloaded_data$transcript_rna_tissue, give.attr = F)
glimpse(downloaded_data$transcript_rna_cell_line, give.attr = F)
```

### List available data with `hpa_list_param`

```{r list_param}
str(hpa_list_param(downloaded_data))
```

### Subset data with `hpa_subset`

```{r subset, message=FALSE, warning=FALSE}
downloaded_data <- c(hpa_download('histology'), hpa_download('rna'))
sapply(downloaded_data, nrow)

gene_list <- c('TP53', 'EGFR', 'CD44', 'PTEN', 'IDH1', 'IDH2', 'CYCS')
tissue_list <- c('breast', 'cerebellum', 'skin 1')
cancer_list <- c('breast cancer', 'glioma', 'melanoma')
cell_line_list <- c('A-431', 'A549', 'AF22', 'AN3-CA')

subset_data <- hpa_subset(data = downloaded_data,
                          target_gene = gene_list,
                          target_tissue = tissue_list,
                          target_cancer = cancer_list,
                          target_cell_line = cell_line_list)
sapply(subset_data, nrow)
```

### Export data with `hpa_export`



## More Examples

You can write math expressions, e.g. $Y = X\beta + \epsilon$, footnotes^[A footnote here.], and tables, e.g. using `knitr::kable()`.

```{r, echo=FALSE, results='asis'}
knitr::kable(head(mtcars, 10))
```

Also a quote using `>`:

> "He who gives up [code] safety for [code] speed deserves neither."
([via](https://twitter.com/hadleywickham/status/504368538874703872))
